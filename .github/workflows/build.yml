name: Build

on:
  workflow_call:
    inputs:
      os_list:
        description: "Comma-separated list of OS (e.g., ubuntu-latest,windows-latest)"
        required: true
        type: string
        default: "ubuntu-latest,windows-latest"

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Parse OS list and set matrix
        id: set-matrix
        run: |
          os_list="${{ inputs.os_list }}"
          os_json=$(echo "$os_list" | tr -d ' ' | jq -R 'split(",")')
          echo "Parsed OS list to JSON array: $os_json"
          echo "matrix={\"os\":$os_json}" >> $GITHUB_OUTPUT
        shell: bash

  build:
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.0"

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Setup python packages
        run: |
          pip install pipx
          pipx ensurepath
          pipx install commitizen
          pipx upgrade commitizen

      - name: Build binary
        shell: pwsh
        id: build
        run: ./scripts/build.ps1 | % { "binary_path=$_" } >> $env:GITHUB_OUTPUT

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}
          path: ${{ steps.build.outputs.binary_path }}
